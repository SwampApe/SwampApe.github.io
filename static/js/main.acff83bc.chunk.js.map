{"version":3,"sources":["Components/Navigation.js","Pages/Lesson.js","Components/VectorArrow.js","Pages/Time.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","className","class","font-weight","to","location","pathname","Lesson","THREE","Time","useState","jsonData","setJsonData","useEffect","localStorage","getItem","url","URL","fetch","method","headers","body","JSON","stringify","user","then","response","json","data","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NA2CeA,aAxCf,SAAoBC,GAClB,OACE,qBAAKC,UAAU,aAAf,SACE,qBAAKC,MAAM,6CAAX,SACE,sBAAKA,MAAM,YAAX,UACE,cAAC,IAAD,CAAMC,cAAY,SAASD,MAAM,eAAeE,GAAG,aAAnD,qBAIA,8BACE,qBAAIF,MAAM,qBAAV,UACE,oBAAIA,MAAK,oBAA2C,MAA5BF,EAAMK,SAASC,SAAmB,SAAW,IAArE,SACE,eAAC,IAAD,CAAMJ,MAAM,WAAWE,GAAG,IAA1B,mBAEE,sBAAMF,MAAM,UAAZ,4BAGJ,oBAAIA,MAAK,oBAA2C,eAA5BF,EAAMK,SAASC,SAA4B,SAAW,IAA9E,SACE,cAAC,IAAD,CAAMJ,MAAM,WAAWE,GAAG,aAA1B,oBAIF,oBAAIF,MAAK,oBAA2C,eAA5BF,EAAMK,SAASC,SAA4B,SAAW,IAA9E,SACE,cAAC,IAAD,CAAMJ,MAAM,WAAWE,GAAG,aAA1B,oBAIF,oBAAIF,MAAK,oBAA2C,UAA5BF,EAAMK,SAASC,SAAuB,SAAW,IAAzE,SACE,cAAC,IAAD,CAAMJ,MAAM,WAAWE,GAAG,QAA1B,mC,YCYDG,I,mECzCWC,I,MC0CXC,MA1Cf,SAAcT,GAAQ,IAAD,EAEaU,mBAAS,IAFtB,mBAEZC,EAFY,KAEFC,EAFE,KAgCnB,OA5BAC,qBAAU,WACR,GAAGC,aAAaC,QAAQ,QAAS,CAC/B,IAAMC,EAAM,IAAIC,IAAI,2CACpBC,MAAMF,EAAK,CACTG,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,KAAMV,aAAaC,QAAQ,YAG5BU,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLhB,EAAYgB,SAUjB,IAKD,8BACI,6BACG,2BAA6BjB,EAAQ,UCLjCkB,MAtBf,WACC,OACC,sBAAK5B,UAAU,MAAf,UACC,wBAAQA,UAAU,eAcf,cAAC,EAAD,QCfS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.acff83bc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nfunction Navigation(props) {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <nav class=\"navbar navbar-expand navbar-light bg-white\">\r\n        <div class=\"container\">\r\n          <Link font-weight=\"bolder\" class=\"navbar-brand\" to=\"/Page2Demo\">\r\n            Vectors\r\n          </Link>\r\n\r\n          <div>\r\n            <ul class=\"navbar-nav ml-auto\">\r\n              <li class={`nav-item  ${props.location.pathname === \"/\" ? \"active\" : \"\"}`}>\r\n                <Link class=\"nav-link\" to=\"/\">\r\n                  Lesson\r\n                  <span class=\"sr-only\">(current)</span>\r\n                </Link>\r\n              </li>\r\n              <li class={`nav-item  ${props.location.pathname === \"/Page2Demo\" ? \"active\" : \"\"}`}>\r\n                <Link class=\"nav-link\" to=\"/Page2Demo\">\r\n                  Demo\r\n                </Link>\r\n              </li>\r\n              <li class={`nav-item  ${props.location.pathname === \"/Page3Quiz\" ? \"active\" : \"\"}`}>\r\n                <Link class=\"nav-link\" to=\"/Page3Quiz\">\r\n                  Quiz\r\n                </Link>\r\n              </li>\r\n              <li class={`nav-item  ${props.location.pathname === \"/Time\" ? \"active\" : \"\"}`}>\r\n                <Link class=\"nav-link\" to=\"/Time\">\r\n                  Time\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);","function Lesson(props) {\r\n  return (\r\n    <body id=\"Lesson\">\r\n        <h1>\r\n            Lesson: Laws of Motion and Forces\r\n        </h1>\r\n        <h2> Force </h2>\r\n        <p>\r\n            A force is defined as that which changes, or tends to change, the velocity of a body. Force is a vector quantity, possessing direction as well as magnitude. A force is not completely defined unless its magnitude, direction, and line of action are specified.\r\n        </p>\r\n        <p>\r\n        The basic unit of force is the newton (symbol N). The newton is the force required to give a mass of l kg an acceleration of times m/s^2.\r\n        </p>\r\n        \r\n        <h2> Newton's First Law of Motion</h2>\r\n        <p>\r\n            A body will remain at rest or continue to move with uniform velocity unless acted upon by an external force.\r\n        </p>\r\n        <h2> Newton's Second Law of Motion </h2>\r\n        <p>\r\n            If an external force acts upon a body, the rate of change of momentum is proportional to the force, and takes place in the direction of the force\r\n        </p>\r\n        <h2> Newton's Third Law of Motion </h2>\r\n        <p>\r\n            To every action there is a reaction equal in magnitude and opposite in direction.\r\n        </p>\r\n        <h2> Resultants of a Force </h2>\r\n        <img src=\"images/by default 2021-02-05 at 10.14.31 AM.png\" alt=\"Forces\"></img>\r\n        <h2> Components of a Force </h2>\r\n        <img src=\"images/by default 2021-01-15 at 1.56.08 PM.png\" alt=\"Forces\"></img>\r\n        <p> </p>\r\n        <div>\r\n            <h2>Problem 1 </h2>\r\n            <iframe width=\"560\" height=\"315\" src=\"https://ucr.yuja.com/V/Video?v=2476476&node=9031198&a=218267724&preload=false\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\r\n            <h2>Problem 2</h2>\r\n            <iframe width=\"560\" height=\"315\" src=\"https://ucr.yuja.com/V/Video?v=2476482&node=9031206&a=1603424358&preload=false\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\r\n            <h2>Problem 3</h2>\r\n            <iframe width=\"560\" height=\"315\" src=\"https://ucr.yuja.com/V/Video?v=2476479&node=9031203&a=1076888299&preload=false\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\r\n        </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Lesson;\r\n","import * as THREE from \"three\";\r\n\r\nclass VectorArrow extends THREE.Object3D {\r\n\r\n\tconstructor(start, end, lineMaterial) {\r\n\r\n\t\tsuper();\r\n\t\t// dir is assumed to be normalized\r\n\r\n        this.type = 'VectorArrow';\r\n        this.lines = [];\r\n        for(let i = 0; i < 3; ++i) {\r\n            const geometry = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1, 0)]);\r\n            const line = new THREE.Line(geometry, lineMaterial);\r\n            this.lines.push(line);\r\n            this.add(line);\r\n        }\r\n\r\n        this.start = start;\r\n        this.end = end;\r\n\r\n        this.update();\r\n\r\n    }\r\n    \r\n    set(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        const direction = this.end.clone().sub(this.start);\r\n        const length = direction.length();\r\n\r\n        let position = this.lines[0].geometry.getAttribute(\"position\");\r\n        position.set([0, 0, 0, 0, 0, length], 0);\r\n        position.needsUpdate = true;\r\n\r\n        position = this.lines[1].geometry.getAttribute(\"position\");\r\n        position.set([0, 0, length, 0, 0.4, length - 0.5], 0);\r\n        position.needsUpdate = true;\r\n\r\n        \r\n        position = this.lines[2].geometry.getAttribute(\"position\");\r\n        position.set([0, 0, length, 0, -0.4, length - 0.5], 0);\r\n        position.needsUpdate = true;\r\n\r\n        this.position.copy(this.start)\r\n\r\n        this.lookAt(this.end);\r\n    }\r\n\r\n    copy(source) {\r\n        super.copy(source, false);\r\n        this.start = source.start;\r\n        this.end = source.end();\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport { VectorArrow };\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction Time(props) {\r\n\r\n  const [jsonData, setJsonData] = useState({});\r\n  \r\n  useEffect(() => {\r\n    if(localStorage.getItem('user')) {\r\n      const url = new URL(\"http://68.5.191.65:3322/statements/time\");\r\n      fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: localStorage.getItem('user'),\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setJsonData(data);\r\n          /*\r\n          if(data[\"success\"]) {\r\n            alert(\"Answer is correct\");\r\n          } else {\r\n            alert(\"Answer is incorrect\");\r\n          }\r\n          */\r\n        });\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <h1>\r\n          {\"Time spent in seconds = \" + jsonData['time']}\r\n        </h1>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Time;","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport Navigation from './Components/Navigation';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Lesson from './Pages/Lesson';\r\nimport Interactive from './Pages/Interactive';\r\nimport Page3Quiz from './Pages/Page3Quiz';\r\nimport Time from './Pages/Time';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"App-header\">\r\n\t\t\t</header>\r\n      {/*\r\n\t\t\t<Router>\r\n\t\t\t\t<Navigation />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/\" exact component={() => <Lesson />} />\r\n\t\t\t\t\t<Route path=\"/Page2Demo\" exact component={() => <Interactive />} />\r\n\t\t\t\t\t<Route path=\"/Page3Quiz\" exact component={() => <Page3Quiz />} />\r\n\t\t\t\t\t<Route path=\"/Time\" exact component={() => <Time />} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t\t <Sender>\r\n\t\t\t</Sender> */}\r\n      <Time/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}