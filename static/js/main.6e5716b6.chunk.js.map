{"version":3,"sources":["Components/Navigation.js","Pages/Lesson.js","Components/VectorArrow.js","Components/Canvas2D.js","Form.js","Components/PointForm.js","Pages/Interactive.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","className","class","font-weight","to","location","pathname","Lesson","VectorArrow","start","end","lineMaterial","type","lines","i","geometry","THREE","setFromPoints","line","push","add","update","this","length","clone","sub","position","getAttribute","set","needsUpdate","copy","lookAt","source","Canvas2D","canvasRef","scene","camera","renderer","antialias","canvas","current","setPixelRatio","window","devicePixelRatio","_resizeIfChange","_lineMaterial","color","linewidth","opacity","_pointMaterial","gridHelper","rotateX","Math","PI","setZ","background","addEventListener","_render","dLine","points","render","dPoints","point","pointGeom","dPoint","updateLine","updatePosition","x","y","domElement","width","clientWidth","height","clientHeight","_resize","widthAspect","max","heightAspect","setSize","console","log","left","right","top","bottom","updateProjectionMatrix","event","pos","object","round","onDragEnd","fPoint","sPoint","_addPoints","controls","DragControls","_updateLine","_onDragEnd","_createUpdatePositionFunction","Form","formRef","useRef","onSubmit","onChange","formProps","handle","func","preventDefault","formData","Object","fromEntries","FormData","ref","children","PointForm","name","updatePoint","target","value","generateRandomInt","floor","random","Interactive","container","useState","setPoints","angle","setAngle","encryptedKey","userId","currentPoints","updatePoints","map","calculateAngle","x1","y1","x2","deltaY","deltaX","atan2","useEffect","url","URL","localStorage","getItem","fetch","method","headers","then","response","json","data","setItem","newLines","toPoints","objs","addLine","addToCanvas","vectors","id","values","form","ans","parseInt","key","alert","body","JSON","stringify","user","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+NA2CeA,aAxCf,SAAoBC,GAClB,OACE,qBAAKC,UAAU,aAAf,SACE,qBAAKC,MAAM,6CAAX,SACE,sBAAKA,MAAM,YAAX,UACE,cAAC,IAAD,CAAMC,cAAY,SAASD,MAAM,eAAeE,GAAG,aAAnD,qBAIA,8BACE,qBAAIF,MAAM,qBAAV,UACE,oBAAIA,MAAK,oBAA2C,MAA5BF,EAAMK,SAASC,SAAmB,SAAW,IAArE,SACE,eAAC,IAAD,CAAMJ,MAAM,WAAWE,GAAG,IAA1B,mBAEE,sBAAMF,MAAM,UAAZ,4BAGJ,oBAAIA,MAAK,oBAA2C,eAA5BF,EAAMK,SAASC,SAA4B,SAAW,IAA9E,SACE,cAAC,IAAD,CAAMJ,MAAM,WAAWE,GAAG,aAA1B,oBAIF,oBAAIF,MAAK,oBAA2C,eAA5BF,EAAMK,SAASC,SAA4B,SAAW,IAA9E,SACE,cAAC,IAAD,CAAMJ,MAAM,WAAWE,GAAG,aAA1B,oBAIF,oBAAIF,MAAK,oBAA2C,UAA5BF,EAAMK,SAASC,SAAuB,SAAW,IAAzE,SACE,cAAC,IAAD,CAAMJ,MAAM,WAAWE,GAAG,QAA1B,mCCYDG,I,mFCzCTC,E,kDAEL,WAAYC,EAAOC,EAAKC,GAAe,IAAD,uBAErC,gBAGWC,KAAO,cACZ,EAAKC,MAAQ,GACb,IAAI,IAAIC,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACvB,IAAMC,GAAW,IAAIC,KAAuBC,cAAc,CAAC,IAAID,IAAc,EAAG,EAAG,GAAI,IAAIA,IAAc,EAAG,EAAG,KACzGE,EAAO,IAAIF,IAAWD,EAAUJ,GACtC,EAAKE,MAAMM,KAAKD,GAChB,EAAKE,IAAIF,GAXkB,OAc/B,EAAKT,MAAQA,EACb,EAAKC,IAAMA,EAEX,EAAKW,SAjB0B,E,gDAqB/BZ,EAAOC,GACPY,KAAKb,MAAQA,EACba,KAAKZ,IAAMA,EACXY,KAAKD,W,+BAIL,IACME,EADYD,KAAKZ,IAAIc,QAAQC,IAAIH,KAAKb,OACnBc,SAErBG,EAAWJ,KAAKT,MAAM,GAAGE,SAASY,aAAa,YACnDD,EAASE,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAGL,GAAS,GACtCG,EAASG,aAAc,GAEvBH,EAAWJ,KAAKT,MAAM,GAAGE,SAASY,aAAa,aACtCC,IAAI,CAAC,EAAG,EAAGL,EAAQ,EAAG,GAAKA,EAAS,IAAM,GACnDG,EAASG,aAAc,GAGvBH,EAAWJ,KAAKT,MAAM,GAAGE,SAASY,aAAa,aACtCC,IAAI,CAAC,EAAG,EAAGL,EAAQ,GAAI,GAAKA,EAAS,IAAM,GACpDG,EAASG,aAAc,EAEvBP,KAAKI,SAASI,KAAKR,KAAKb,OAExBa,KAAKS,OAAOT,KAAKZ,O,2BAGhBsB,GAID,OAHA,4DAAWA,GAAQ,GACnBV,KAAKb,MAAQuB,EAAOvB,MACpBa,KAAKZ,IAAMsB,EAAOtB,MACXY,S,GAvDWN,KCsJXiB,E,WAnJb,WAAYC,GAAY,IAAD,2BACrBZ,KAAKa,MAAQ,IAAInB,IACjBM,KAAKc,OAAS,IAAIpB,IAChB,EACA,EACA,EACA,EACA,EACA,KAGFM,KAAKc,OAAOV,SAASE,IAAI,GAAI,GAAI,KACjCN,KAAKc,OAAOL,OAAO,GAAI,GAAI,GAE3BT,KAAKe,SAAW,IAAIrB,IAAoB,CAAEsB,WAAW,EAAMC,OAAQL,EAAUM,UAC7ElB,KAAKe,SAASI,cAAcC,OAAOC,kBAEnCrB,KAAKsB,kBAELtB,KAAKuB,cAAgB,IAAI7B,IAAwB,CAC/C8B,MAAO,IACPC,UAAW,GACXC,QAAS,MAEX1B,KAAK2B,eAAiB,IAAIjC,IAAwB,CAAE8B,MAAO,WAC3DxB,KAAK4B,WAAa,IAAIlC,IAAiB,IAAK,IAAK,QAAU,UAC3DM,KAAK4B,WAAWC,QAAQC,KAAKC,GAAK,GAClC/B,KAAK4B,WAAWxB,SAAS4B,MAAM,IAC/BhC,KAAKa,MAAMoB,WAAa,IAAIvC,IAAY,UACxCM,KAAKa,MAAMf,IAAIE,KAAK4B,YAEpBR,OAAOc,iBAAiB,UAAU,WAAQ,EAAKZ,kBAC7C,EAAKa,aAEPnC,KAAKmC,U,wDAGKC,GAAQ,IAAD,OACjB,OAAO,WACH,IAAMC,EAASD,EAAMC,OACrBD,EAAM9B,IAAI+B,EAAO,GAAIA,EAAO,IAE5B,EAAKF,a,gCAKTnC,KAAKe,SAASuB,OAAOtC,KAAKa,MAAOb,KAAKc,U,iCAG7BuB,GAET,IADA,IAAME,EAAU,GACP/C,EAAI,EAAGA,EAAI6C,EAAOpC,SAAUT,EAAG,CACtC,IAAMgD,EAAQH,EAAO7C,GACfiD,EAAY,IAAI/C,IAAqB,GAAK,IAC1CgD,EAAS,IAAIhD,IAAW+C,EAAWzC,KAAK2B,gBAE9Ce,EAAOtC,SAASI,KAAKgC,GACrBD,EAAQ1C,KAAK6C,GACbL,EAAO7C,GAAKkD,EAAOtC,SAEnBJ,KAAKa,MAAMf,IAAI4C,GAEjB,OAAOH,I,oDAGqBC,EAAOG,GAAa,IAAD,OAC/CH,EAAMI,eAAiB,SAACC,EAAGC,GACzBN,EAAMpC,SAASyC,EAAIA,EACnBL,EAAMpC,SAAS0C,EAAIA,EACnBN,EAAMjC,aAAc,EACpBoC,IACA,EAAKR,a,wCAKP,IAAMlB,EAASjB,KAAKe,SAASgC,WACvBC,EAAQ/B,EAAOgC,YACfC,EAASjC,EAAOkC,aAEnBlC,EAAO+B,QAAUA,GAAS/B,EAAOiC,SAAWA,GAC7ClD,KAAKoD,QAAQJ,EAAOE,K,8BAIhBF,EAAOE,GACb,IAAMG,EAAcvB,KAAKwB,IAAI,EAAGN,EAAQE,GAClCK,EAAezB,KAAKwB,IAAI,EAAGJ,EAASF,GAE1ChD,KAAKe,SAASyC,QAAQR,EAAOE,GAAQ,GACrCO,QAAQC,IAAIV,GACZS,QAAQC,IAAIR,GAEZlD,KAAKc,OAAO6C,MAAQ,GAAKN,EACzBrD,KAAKc,OAAO8C,MAAQ,GAAKP,EACzBrD,KAAKc,OAAO+C,IAAM,GAAKN,EACvBvD,KAAKc,OAAOgD,QAAU,GAAKP,EAE3BvD,KAAKc,OAAOiD,2B,iCAGHC,GACT,IAAMC,EAAMD,EAAME,OAAO9D,SACnByC,EAAIf,KAAKqC,MAAMF,EAAG,GAClBnB,EAAIhB,KAAKqC,MAAMF,EAAG,GACxBD,EAAME,OAAOtB,eAAeC,EAAGC,GAC5BkB,EAAME,OAAOE,WACdJ,EAAME,OAAOE,UAAUJ,EAAME,OAAO9D,Y,8BAIhCiE,EAAQC,GACd,IAAMjC,EAAS,GACfA,EAAOxC,KAAK,IAAIH,IAAc2E,EAAO,GAAIA,EAAO,GAAI,IACpDhC,EAAOxC,KAAK,IAAIH,IAAc4E,EAAO,GAAIA,EAAO,GAAI,IAEpD,IAAM/B,EAAUvC,KAAKuE,WAAWlC,GAE1BmC,EAAW,IAAIC,IACnBlC,EACAvC,KAAKc,OACLd,KAAKe,SAASgC,YAGVX,EAAQ,IAAIlD,EAAYmD,EAAO,GAAIA,EAAO,GAAIrC,KAAKuB,eACzDa,EAAMC,OAASA,EAEf,IAAMM,EAAa3C,KAAK0E,YAAYtC,GACpCoC,EAAStC,iBAAiB,OAAQS,GAClC6B,EAAStC,iBAAiB,UAAWlC,KAAK2E,YAE1C,IAAI,IAAInF,EAAI,EAAGA,EAAI+C,EAAQtC,SAAUT,EACnCQ,KAAK4E,8BAA8BrC,EAAQ/C,GAAImD,GAOjD,OAJA3C,KAAKa,MAAMf,IAAIsC,GAEfpC,KAAKmC,UAEE,CACLE,OAAQE,EACR3C,KAAMwC,O,aCxHGyC,MAzBf,SAAcnG,GACZ,IAAMoG,EAAUC,iBAAO,MACfC,EAAqCtG,EAArCsG,SAAUC,EAA2BvG,EAA3BuG,SAAaC,EAFZ,YAE0BxG,EAF1B,yBAGnB,SAASyG,EAAOC,GACd,OAAO,SAAUpB,GAEf,GADAA,EAAMqB,iBACFD,EAAM,CACR,IAAME,EAAWC,OAAOC,YAAY,IAAIC,SAASX,EAAQ5D,UACzDkE,EAAKE,EAAUR,KAKrB,OACE,8CACEY,IAAKZ,EACLE,SAAUG,EAAOH,GACjBC,SAAUE,EAAOF,IACbC,GAJN,aAMGxG,EAAMiH,aCaEC,MAjCf,SAAmBlH,GACjB,OACE,qCACE,+BACE,6BAAK,IAAMA,EAAMmH,OACjB,6BACE,uBACEZ,SAAU,SAACjB,GACTtF,EAAMoH,YAAY9B,EAAM+B,OAAOC,MAAOtH,EAAM8D,MAAN,IAExCqD,KAAM,IAAMnH,EAAMmH,KAClBvG,KAAK,SACL0G,MAAOtH,EAAM8D,MAAN,SAIb,+BACE,6BAAK,IAAM9D,EAAMmH,OACjB,6BACE,uBACEZ,SAAU,SAACjB,GACTtF,EAAMoH,YAAYpH,EAAM8D,MAAN,EAAkBwB,EAAM+B,OAAOC,QAEnDH,KAAM,IAAMnH,EAAMmH,KAClBvG,KAAK,SACL0G,MAAOtH,EAAM8D,MAAN,aCpBnB,SAASyD,EAAkB3C,GACzB,OAAOxB,KAAKoE,MAAMpE,KAAKqE,SAAWrE,KAAKoE,MAAM5C,IA6LhC8C,MA1Lf,SAAqB1H,GACnB,IAAM2H,EAAYtB,iBAAO,MADC,EAEEuB,mBAAS,IAFX,mBAEnBjE,EAFmB,KAEXkE,EAFW,OAGAD,mBAAS,GAHT,mBAGnBE,EAHmB,KAGZC,EAHY,KAIpBC,EAAe3B,iBAAO,MACtB4B,EAAS5B,iBAAO,MAChB6B,EAAgB7B,iBAAO1C,GACvBwE,EAAe9B,iBAAO1C,GAE5B,SAASyD,EAAYtG,EAAGqD,EAAGC,GACzB8D,EAAc1F,QAAQ1B,GAAK,CAAEqD,EAAGA,EAAGC,EAAGA,GACtC+D,EAAa3F,QAAQ1B,GAAGqD,EAAGC,GAC3ByD,EAAUK,EAAc1F,QAAQ4F,KAAI,SAACtE,GAAD,OAAWA,MAC/CiE,EAASM,EAAeH,EAAc1F,QAAQ,GAAI0F,EAAc1F,QAAQ,KAuH1E,SAAS6F,EAAe1C,EAAQC,GAC9Bb,QAAQC,IAAIW,GACZZ,QAAQC,IAAIY,GACZ,IAAI0C,EAAK3C,EAAM,EACX4C,EAAK5C,EAAM,EACX6C,EAAK5C,EAAM,EAEX6C,EADK7C,EAAM,EACG2C,EACdG,EAASF,EAAKF,EAClB,OAAOlF,KAAKqC,MAAqC,IAA9BrC,KAAKuF,MAAMF,EAAQC,GAAiBtF,KAAKC,IAI9D,OA9CAuF,qBAAU,WACR,IAAMrG,EAAS,IAAIN,EAAS0F,GAEtBkB,EAAM,IAAIC,IAAI,qDAMhBC,aAAaC,QAAQ,SACvBC,MAAMJ,EAAK,CACTK,OAAQ,OACRC,QAAS,CACP,eAAgB,sBAIjBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAELR,aAAaS,QAAQ,OAAQD,EAAI,SA5CzC,SAAqBhH,EAAQgH,GAI3B,IAHA,IAAME,EAAWF,EAAI,QACjBG,EAAQ,YAAOxB,EAAc1F,SAFA,WAIxB1B,GACH6I,EAAOpH,EAAOqH,QAAQH,EAAS3I,GAAG,GAAI2I,EAAS3I,GAAG,IAEtD,IADA,IAAIS,EAASmI,EAASnI,OANS,WAOtBT,GACO6I,EAAI,OAAW7I,GACvB4E,UAAY,SAAChE,GAAD,OAChB0F,EAAY7F,EAAST,EAAGY,EAAQ,EAAOA,EAAQ,KAH1CZ,EAAI,EAAGA,EAAI6I,EAAI,OAAWpI,SAAUT,EAAI,EAAxCA,GAMT4I,EAAQ,sBAAOA,GAAP,YAAoBC,EAAI,UATzB7I,EAAI,EAAGA,EAAI2I,EAASlI,SAAUT,EAAG,CAAC,IACrC6I,EADoC,EAAjC7I,GAYToH,EAAc1F,QAAUkH,EAAStB,KAAI,SAACtE,GAAD,OAAWA,EAAMpC,YACtDyG,EAAa3F,QAAUkH,EAAStB,KAAI,SAACtE,GAAD,OAAWA,EAAMI,kBACrD8D,EAAaxF,QAAU+G,EAAI,IAC3BtB,EAAOzF,QAAU+G,EAAI,GACrB1B,EAAUK,EAAc1F,QAAQ4F,KAAI,SAACtE,GAAD,OAAWA,MAC/CiE,EAASM,EAAeH,EAAc1F,QAAQ,GAAI0F,EAAc1F,QAAQ,KAgCxEqH,CAAYtH,EAAQ,CAAEuH,QAHL,CACf,CAAC,CAACvC,EAAkB,IAAKA,EAAkB,KAAM,CAACA,EAAkB,IAAKA,EAAkB,WAG5F,IAiBD,qCACE,qBAAKwC,GAAG,OAAR,SACE,wBAAQA,GAAG,aAAa/C,IAAKW,MAE/B,cAAC,EAAD,CAAMrB,SA1HV,SAAkB0D,EAAQC,GACxB,IAAMC,EAAMC,SAASH,EAAM,GAAS,IAAMG,SAASH,EAAM,GACnDI,EAAMD,SAASxG,EAAO,GAAP,EAAiBA,EAAO,GAAP,GAAkB,IAAMwG,SAASxG,EAAO,GAAP,EAAiBA,EAAO,GAAP,GAqBxF,GApBIuG,IAAQE,EACVC,MAAM,WAENA,MAAM,aAERtF,QAAQC,IAAIkF,EAAKE,GAedrB,aAAaC,QAAQ,QAAS,CAC/B,IAAMH,EAAM,IAAIC,IAAI,4DACpBG,MAAMJ,EAAK,CACTK,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBmB,KAAMC,KAAKC,UAAU,CACnBC,KAAM1B,aAAaC,QAAQ,YAG5BI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,SAuFT,SACE,sBAAKQ,GAAG,WAAR,UACE,yDACA,kGACA,kFACA,wBAAO9J,UAAU,SAAjB,UACE,qBAAI8J,GAAG,cAAP,UACE,2CACA,iDA7IHpG,EAAOyE,KAAI,SAACtE,EAAOhD,GACxB,OACE,cAAC,EAAD,CACEqG,KAAMrG,EACNsG,YAAa,SAACjD,EAAGC,GAAJ,OAAUgD,EAAYtG,EAAGqD,EAAGC,IACzCN,MAAK,eAAOA,QA2IV,+BACE,uCACA,mCAAK,uBAAOqD,KAAK,QAAQG,MAAOQ,EAAO4C,YAAa5C,EAAOlH,KAAK,eAElE,qBAAImJ,GAAG,QAAP,UACE,oCACA,6BAAI,uBAAO5C,KAAK,IAAI4C,GAAG,KAAKnJ,KAAK,OAAO8J,YAAY,YAEtD,qBAAIX,GAAG,QAAP,UACE,oCACA,6BAAI,uBAAO5C,KAAK,IAAI4C,GAAG,KAAKnJ,KAAK,OAAO8J,YAAY,eAGxD,wBAAQ9J,KAAK,SAAb,oBACA,mBAAGmJ,GAAG,WAEN,+EACA,qDACA,8DC9JKY,MAtBf,WACC,OACC,sBAAK1K,UAAU,MAAf,UACC,wBAAQA,UAAU,eAcf,cAAC,EAAD,QCfS2K,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASxH,OACL,cAAC,IAAMyH,WAAP,UACE,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.6e5716b6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nfunction Navigation(props) {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <nav class=\"navbar navbar-expand navbar-light bg-white\">\r\n        <div class=\"container\">\r\n          <Link font-weight=\"bolder\" class=\"navbar-brand\" to=\"/Page2Demo\">\r\n            Vectors\r\n          </Link>\r\n\r\n          <div>\r\n            <ul class=\"navbar-nav ml-auto\">\r\n              <li class={`nav-item  ${props.location.pathname === \"/\" ? \"active\" : \"\"}`}>\r\n                <Link class=\"nav-link\" to=\"/\">\r\n                  Lesson\r\n                  <span class=\"sr-only\">(current)</span>\r\n                </Link>\r\n              </li>\r\n              <li class={`nav-item  ${props.location.pathname === \"/Page2Demo\" ? \"active\" : \"\"}`}>\r\n                <Link class=\"nav-link\" to=\"/Page2Demo\">\r\n                  Demo\r\n                </Link>\r\n              </li>\r\n              <li class={`nav-item  ${props.location.pathname === \"/Page3Quiz\" ? \"active\" : \"\"}`}>\r\n                <Link class=\"nav-link\" to=\"/Page3Quiz\">\r\n                  Quiz\r\n                </Link>\r\n              </li>\r\n              <li class={`nav-item  ${props.location.pathname === \"/Time\" ? \"active\" : \"\"}`}>\r\n                <Link class=\"nav-link\" to=\"/Time\">\r\n                  Time\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);","function Lesson(props) {\r\n  return (\r\n    <body id=\"Lesson\">\r\n        <h1>\r\n            Lesson: Laws of Motion and Forces\r\n        </h1>\r\n        <h2> Force </h2>\r\n        <p>\r\n            A force is defined as that which changes, or tends to change, the velocity of a body. Force is a vector quantity, possessing direction as well as magnitude. A force is not completely defined unless its magnitude, direction, and line of action are specified.\r\n        </p>\r\n        <p>\r\n        The basic unit of force is the newton (symbol N). The newton is the force required to give a mass of l kg an acceleration of times m/s^2.\r\n        </p>\r\n        \r\n        <h2> Newton's First Law of Motion</h2>\r\n        <p>\r\n            A body will remain at rest or continue to move with uniform velocity unless acted upon by an external force.\r\n        </p>\r\n        <h2> Newton's Second Law of Motion </h2>\r\n        <p>\r\n            If an external force acts upon a body, the rate of change of momentum is proportional to the force, and takes place in the direction of the force\r\n        </p>\r\n        <h2> Newton's Third Law of Motion </h2>\r\n        <p>\r\n            To every action there is a reaction equal in magnitude and opposite in direction.\r\n        </p>\r\n        <h2> Resultants of a Force </h2>\r\n        <img src=\"images/by default 2021-02-05 at 10.14.31 AM.png\" alt=\"Forces\"></img>\r\n        <h2> Components of a Force </h2>\r\n        <img src=\"images/by default 2021-01-15 at 1.56.08 PM.png\" alt=\"Forces\"></img>\r\n        <p> </p>\r\n        <div>\r\n            <h2>Problem 1 </h2>\r\n            <iframe width=\"560\" height=\"315\" src=\"https://ucr.yuja.com/V/Video?v=2476476&node=9031198&a=218267724&preload=false\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\r\n            <h2>Problem 2</h2>\r\n            <iframe width=\"560\" height=\"315\" src=\"https://ucr.yuja.com/V/Video?v=2476482&node=9031206&a=1603424358&preload=false\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\r\n            <h2>Problem 3</h2>\r\n            <iframe width=\"560\" height=\"315\" src=\"https://ucr.yuja.com/V/Video?v=2476479&node=9031203&a=1076888299&preload=false\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\r\n        </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default Lesson;\r\n","import * as THREE from \"three\";\r\n\r\nclass VectorArrow extends THREE.Object3D {\r\n\r\n\tconstructor(start, end, lineMaterial) {\r\n\r\n\t\tsuper();\r\n\t\t// dir is assumed to be normalized\r\n\r\n        this.type = 'VectorArrow';\r\n        this.lines = [];\r\n        for(let i = 0; i < 3; ++i) {\r\n            const geometry = new THREE.BufferGeometry().setFromPoints([new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1, 0)]);\r\n            const line = new THREE.Line(geometry, lineMaterial);\r\n            this.lines.push(line);\r\n            this.add(line);\r\n        }\r\n\r\n        this.start = start;\r\n        this.end = end;\r\n\r\n        this.update();\r\n\r\n    }\r\n    \r\n    set(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        const direction = this.end.clone().sub(this.start);\r\n        const length = direction.length();\r\n\r\n        let position = this.lines[0].geometry.getAttribute(\"position\");\r\n        position.set([0, 0, 0, 0, 0, length], 0);\r\n        position.needsUpdate = true;\r\n\r\n        position = this.lines[1].geometry.getAttribute(\"position\");\r\n        position.set([0, 0, length, 0, 0.4, length - 0.5], 0);\r\n        position.needsUpdate = true;\r\n\r\n        \r\n        position = this.lines[2].geometry.getAttribute(\"position\");\r\n        position.set([0, 0, length, 0, -0.4, length - 0.5], 0);\r\n        position.needsUpdate = true;\r\n\r\n        this.position.copy(this.start)\r\n\r\n        this.lookAt(this.end);\r\n    }\r\n\r\n    copy(source) {\r\n        super.copy(source, false);\r\n        this.start = source.start;\r\n        this.end = source.end();\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport { VectorArrow };\r\n","import * as THREE from \"three\";\r\nimport { DragControls } from \"three/examples/jsm/controls/DragControls\";\r\nimport {VectorArrow} from \"./VectorArrow\";\r\n\r\nclass Canvas2D {\r\n  constructor(canvasRef) {\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.OrthographicCamera(\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      1,\r\n      10000\r\n    );\r\n    \r\n    this.camera.position.set(10, 10, 100);\r\n    this.camera.lookAt(10, 10, 0);\r\n\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true, canvas: canvasRef.current});\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n    this._resizeIfChange();\r\n\r\n    this._lineMaterial = new THREE.LineBasicMaterial({\r\n      color: 0x0000ff,\r\n      linewidth: 0.3,\r\n      opacity: 0.35,\r\n    });\r\n    this._pointMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000 });\r\n    this.gridHelper = new THREE.GridHelper(100, 100, 0x888888, 0xCCCCCC);\r\n    this.gridHelper.rotateX(Math.PI / 2);\r\n    this.gridHelper.position.setZ(-0.5);\r\n    this.scene.background = new THREE.Color(0xFFFFFF);\r\n    this.scene.add(this.gridHelper);\r\n\r\n    window.addEventListener(\"resize\", () => { this._resizeIfChange(); \r\n      this._render(); });\r\n\r\n    this._render();\r\n  }\r\n\r\n  _updateLine(dLine) {\r\n    return () => {\r\n        const points = dLine.points;\r\n        dLine.set(points[0], points[1]);\r\n\r\n        this._render();\r\n    }\r\n  }\r\n\r\n  _render() {\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n  \r\n  _addPoints(points) {\r\n    const dPoints = [];\r\n    for (let i = 0; i < points.length; ++i) {\r\n      const point = points[i];\r\n      const pointGeom = new THREE.CircleGeometry(0.1, 32);\r\n      const dPoint = new THREE.Mesh(pointGeom, this._pointMaterial);\r\n\r\n      dPoint.position.copy(point);\r\n      dPoints.push(dPoint);\r\n      points[i] = dPoint.position;\r\n\r\n      this.scene.add(dPoint);\r\n    }\r\n    return dPoints;\r\n  }\r\n\r\n  _createUpdatePositionFunction(point, updateLine) {\r\n    point.updatePosition = (x, y) => {\r\n      point.position.x = x;\r\n      point.position.y = y;\r\n      point.needsUpdate = true;\r\n      updateLine();\r\n      this._render();\r\n    }\r\n  }\r\n\r\n  _resizeIfChange() {\r\n    const canvas = this.renderer.domElement;\r\n    const width = canvas.clientWidth;\r\n    const height = canvas.clientHeight;\r\n\r\n    if(canvas.width !== width || canvas.height !== height) {\r\n      this._resize(width, height);\r\n    }\r\n  }\r\n  \r\n  _resize(width, height) {\r\n    const widthAspect = Math.max(1, width / height);\r\n    const heightAspect = Math.max(1, height / width);\r\n\r\n    this.renderer.setSize(width, height, false);\r\n    console.log(width);\r\n    console.log(height);\r\n\r\n    this.camera.left = -20 * widthAspect;\r\n    this.camera.right = 20 * widthAspect;\r\n    this.camera.top = 20 * heightAspect;\r\n    this.camera.bottom = -20 * heightAspect;\r\n    \r\n    this.camera.updateProjectionMatrix();\r\n  }\r\n\r\n  _onDragEnd(event) {\r\n    const pos = event.object.position;\r\n    const x = Math.round(pos['x']);\r\n    const y = Math.round(pos['y']);\r\n    event.object.updatePosition(x, y);\r\n    if(event.object.onDragEnd) {\r\n      event.object.onDragEnd(event.object.position);\r\n    }\r\n  }\r\n\r\n  addLine(fPoint, sPoint) {\r\n    const points = [];\r\n    points.push(new THREE.Vector3(fPoint[0], fPoint[1], 0));\r\n    points.push(new THREE.Vector3(sPoint[0], sPoint[1], 0));\r\n\r\n    const dPoints = this._addPoints(points);\r\n\r\n    const controls = new DragControls(\r\n      dPoints,\r\n      this.camera,\r\n      this.renderer.domElement\r\n    );\r\n\r\n    const dLine = new VectorArrow(points[0], points[1], this._lineMaterial);\r\n    dLine.points = points;\r\n\r\n    const updateLine = this._updateLine(dLine);\r\n    controls.addEventListener(\"drag\", updateLine);\r\n    controls.addEventListener(\"dragend\", this._onDragEnd);\r\n\r\n    for(let i = 0; i < dPoints.length; ++i) {\r\n      this._createUpdatePositionFunction(dPoints[i], updateLine);\r\n    }\r\n\r\n    this.scene.add(dLine);\r\n\r\n    this._render();\r\n\r\n    return {\r\n      points: dPoints,\r\n      line: dLine,\r\n    }\r\n  }\r\n}\r\n\r\nexport default Canvas2D;","import React, { useRef } from \"react\";\r\n\r\nfunction Form(props) {\r\n  const formRef = useRef(null);\r\n  const { onSubmit, onChange, ...formProps } = props;\r\n  function handle(func) {\r\n    return function (event) {\r\n      event.preventDefault();\r\n      if (func) {\r\n        const formData = Object.fromEntries(new FormData(formRef.current));\r\n        func(formData, formRef);\r\n      }\r\n    };\r\n  }\r\n\r\n  return (\r\n    <form\r\n      ref={formRef}\r\n      onSubmit={handle(onSubmit)}\r\n      onChange={handle(onChange)}\r\n      {...formProps}\r\n    >\r\n      {props.children}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction PointForm(props) {\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>{\"X\" + props.name}</td>\r\n        <td>\r\n          <input\r\n            onChange={(event) => {\r\n              props.updatePoint(event.target.value, props.point[\"y\"]);\r\n            }}\r\n            name={\"x\" + props.name}\r\n            type=\"number\"\r\n            value={props.point[\"x\"]}\r\n          />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>{\"Y\" + props.name}</td>\r\n        <td>\r\n          <input\r\n            onChange={(event) => {\r\n              props.updatePoint(props.point[\"x\"], event.target.value);\r\n            }}\r\n            name={\"y\" + props.name}\r\n            type=\"number\"\r\n            value={props.point[\"y\"]}\r\n          />\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PointForm;\r\n","import Canvas2D from \"../Components/Canvas2D\";\r\nimport Form from \"../Form\";\r\nimport '../App.css';\r\nimport PointForm from \"../Components/PointForm\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\n\r\nfunction generateRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nfunction Interactive(props) {\r\n  const container = useRef(null);\r\n  const [points, setPoints] = useState([]);\r\n  const [angle, setAngle] = useState(0);\r\n  const encryptedKey = useRef(null);\r\n  const userId = useRef(null);\r\n  const currentPoints = useRef(points);\r\n  const updatePoints = useRef(points);\r\n\r\n  function updatePoint(i, x, y) {\r\n    currentPoints.current[i] = { x: x, y: y };\r\n    updatePoints.current[i](x, y);\r\n    setPoints(currentPoints.current.map((point) => point));\r\n    setAngle(calculateAngle(currentPoints.current[0], currentPoints.current[1]));\r\n  }\r\n\r\n  function renderForm() {\r\n    return points.map((point, i) => {\r\n      return (\r\n        <PointForm\r\n          name={i}\r\n          updatePoint={(x, y) => updatePoint(i, x, y)}\r\n          point={{ ...point }}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  function onSubmit(values, form) {\r\n    const ans = parseInt(values['x']) + ',' + parseInt(values['y']);\r\n    const key = parseInt(points[1]['x'] - points[0]['x']) + ',' + parseInt(points[1]['y'] - points[0]['y']);\r\n    if (ans === key) {\r\n      alert(\"Correct\");\r\n    } else {\r\n      alert(\"Incorrect\");\r\n    }\r\n    console.log(ans, key);\r\n    /*\r\n      Temporary mock verification\r\n\r\n      Need to use Question component \r\n    */\r\n    /*\r\n    const ans = values[\"x\"] + \",\" + values[\"y\"];\r\n    const body = {\r\n      key: encryptedKey.current,\r\n      id: userId.current,\r\n      ans: ans,\r\n    };\r\n    */\r\n    \r\n    if(localStorage.getItem('user')) {\r\n      const url = new URL(\"http://68.5.191.65:3322/tasks/content/interactive/verify\");\r\n      fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          user: localStorage.getItem('user'),\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          /*\r\n          if(data[\"success\"]) {\r\n            alert(\"Answer is correct\");\r\n          } else {\r\n            alert(\"Answer is incorrect\");\r\n          }\r\n          */\r\n        });\r\n    }\r\n  }\r\n\r\n  function addToCanvas(canvas, data) {\r\n    const newLines = data[\"vectors\"];\r\n    let toPoints = [...currentPoints.current];\r\n\r\n    for (let i = 0; i < newLines.length; ++i) {\r\n      var objs = canvas.addLine(newLines[i][0], newLines[i][1]);\r\n      let length = toPoints.length;\r\n      for (let i = 0; i < objs[\"points\"].length; ++i) {\r\n        const point = objs[\"points\"][i];\r\n        point.onDragEnd = (position) =>\r\n          updatePoint(length + i, position[\"x\"], position[\"y\"]);\r\n      }\r\n\r\n      toPoints = [...toPoints, ...objs[\"points\"]];\r\n    }\r\n\r\n    currentPoints.current = toPoints.map((point) => point.position);\r\n    updatePoints.current = toPoints.map((point) => point.updatePosition);\r\n    encryptedKey.current = data['key'];\r\n    userId.current = data['id'];\r\n    setPoints(currentPoints.current.map((point) => point));\r\n    setAngle(calculateAngle(currentPoints.current[0], currentPoints.current[1]));\r\n  }\r\n\r\n  useEffect(() => {\r\n    const canvas = new Canvas2D(container);\r\n    \r\n    const url = new URL(\"http://68.5.191.65:3322/tasks/content/interactive\");\r\n\r\n    //send message to server\r\n    let formValues = {\r\n      type: \"vector\",\r\n    };\r\n    if(!localStorage.getItem('user')) {\r\n      fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        //body: JSON.stringify(formValues),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          //addToCanvas(canvas, data);\r\n          localStorage.setItem('user', data['user']);\r\n        });\r\n    }\r\n\r\n    //Temporary mock data not from server\r\n\r\n    const newLines = [\r\n      [[generateRandomInt(30), generateRandomInt(30)], [generateRandomInt(30), generateRandomInt(30)]]\r\n    ];\r\n    addToCanvas(canvas, { vectors: newLines });\r\n  }, []);\r\n\r\n\r\n  function calculateAngle(fPoint, sPoint) {\r\n    console.log(fPoint);\r\n    console.log(sPoint);\r\n    var x1 = fPoint['x'];\r\n    var y1 = fPoint['y'];\r\n    var x2 = sPoint['x'];\r\n    var y2 = sPoint['y'];\r\n    var deltaY = y2 - y1;\r\n    var deltaX = x2 - x1;\r\n    return Math.round((Math.atan2(deltaY, deltaX)) * 180 / Math.PI);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div id=\"Demo\">\r\n        <canvas id=\"DemoCanvas\" ref={container}></canvas>\r\n      </div>\r\n      <Form onSubmit={onSubmit}>\r\n        <div id=\"material\">\r\n          <h1> Magnitude of a Vector </h1>\r\n          <p> Calculate Fx and Fy given the provided data and formulas below: </p>\r\n          <p> Round your answers to the nearest whole number! </p>\r\n          <table className=\"center\">\r\n            <tr id=\"tableheader\">\r\n              <th>Operation</th>\r\n              <th>Input/Result</th>\r\n            </tr>\r\n            {renderForm()}\r\n            <tr>\r\n              <td>Angle</td>\r\n              <td> <input name=\"angle\" value={angle} placeholder={angle} type=\"text\"></input></td>\r\n            </tr>\r\n            <tr id=\"rowFX\">\r\n              <td>Fx</td>\r\n              <td><input name=\"x\" id=\"Fx\" type=\"text\" placeholder=\"Fx\" ></input></td>\r\n            </tr>\r\n            <tr id=\"rowFY\">\r\n              <td>Fy</td>\r\n              <td><input name=\"y\" id=\"Fy\" type=\"text\" placeholder=\"Fy\"></input></td>\r\n            </tr>\r\n          </table>\r\n          <button type=\"submit\">Submit</button>\r\n          <p id=\"output\"></p>\r\n          {/* <p> Calculate Fx and Fy given the formulas below: </p> */}\r\n          <p> The force (F) is the √(Fx² + Fy²) </p>\r\n          <p> Fx = F*cos(θ) </p>\r\n          <p> Fy = F*sin(θ) </p>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Interactive;\r\n","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport Navigation from './Components/Navigation';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Lesson from './Pages/Lesson';\r\nimport Interactive from './Pages/Interactive';\r\nimport Page3Quiz from './Pages/Page3Quiz';\r\nimport Time from './Pages/Time';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"App-header\">\r\n\t\t\t</header>\r\n      {/*\r\n\t\t\t<Router>\r\n\t\t\t\t<Navigation />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/\" exact component={() => <Lesson />} />\r\n\t\t\t\t\t<Route path=\"/Page2Demo\" exact component={() => <Interactive />} />\r\n\t\t\t\t\t<Route path=\"/Page3Quiz\" exact component={() => <Page3Quiz />} />\r\n\t\t\t\t\t<Route path=\"/Time\" exact component={() => <Time />} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t\t <Sender>\r\n\t\t\t</Sender> */}\r\n      <Interactive/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}